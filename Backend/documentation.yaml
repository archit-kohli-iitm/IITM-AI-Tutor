openapi: 3.0.1
info:
  title: AI Tutor API
  version: "1.0"
servers:
- url: /
tags:
- name: Health
  description: Check API health
- name: Auth
  description: Authentication operations
- name: Subject
  description: Subject Management operations
- name: Chat
  description: Operations for chats
- name: Message
  description: Operations for messages
paths:
  /auth/login:
    post:
      tags:
      - Auth
      summary: Authenticate and login to the application
      description: Authenticate an existing user into the application (Returns a JWT
        `access_token` to be included with every request)
      operationId: post_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAuth'
        required: true
      responses:
        "200":
          description: Successful login
          content: {}
        "401":
          description: Invalid email or password
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: payload
  /auth/logout:
    post:
      tags:
      - Auth
      summary: Log out of the application
      operationId: post_logout
      responses:
        "200":
          description: Successful logout
          content: {}
        "422":
          description: Invalid Token
          content: {}
  /auth/signup:
    post:
      tags:
      - Auth
      summary: Create and authenticate a new user into the application
      description: Create and authenticate a new user into the application (Returns
        a JWT `access_token` to be included with every request)
      operationId: post_signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      responses:
        "201":
          description: Successful registeration
          content: {}
        "400":
          description: User already exists
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: payload
  /chats/:
    get:
      tags:
      - Chat
      summary: Lists all chats of the current user
      description: Get a list of all chats of the current user including the `subject_id`
        and `subject_name`. (Does not include chat messages)
      operationId: get_chat_resource
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Invalid User
          content: {}
        "404":
          description: Subject not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Chat
      summary: Create a new chat
      description: Create a new chat belonging to the current user under a specified
        subject
      operationId: post_chat_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
        required: true
      responses:
        "201":
          description: Chat created successfully
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Invalid User
          content: {}
        "404":
          description: Subject not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: payload
  /chats/{chat_id}:
    get:
      tags:
      - Chat
      summary: Get all messages from a chat
      description: Get all messages from a particular `chat_id` (Chat must belong
        to the current user)
      operationId: get_specific_chat_resource
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Invalid User
          content: {}
        "404":
          description: Chat not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    delete:
      tags:
      - Chat
      summary: Delete a chat
      description: Get all messages from a particular `chat_id` (Chat must belong
        to the current user)
      operationId: delete_specific_chat_resource
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Invalid User
          content: {}
        "404":
          description: Chat not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /health/:
    get:
      tags:
      - Health
      summary: Get health information
      description: "Get API health information like `uptime_seconds`, `cpu usage_percent`\
        \ and `memory_usage_percent`"
      operationId: get_health_check
      responses:
        "200":
          description: Success
          content: {}
  /message/send:
    post:
      tags:
      - Message
      summary: Send a message to the AI Tutor
      description: Send a message to the AI Tutor with context information automatically
        fetched from a particular `chat_id` and vector database (Returns a stream
        of output tokens)
      operationId: post_message_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      responses:
        "200":
          description: Streaming Response from AI
          content: {}
        "403":
          description: Invalid User
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: payload
  /subjects/:
    get:
      tags:
      - Subject
      summary: List all subjects
      description: List all subjects currently available in the database along with
        their `subject_id` and `name`
      operationId: get_subject_resource
      responses:
        "200":
          description: Subjects retrieved successfully
          content: {}
        "403":
          description: Unauthorized (Admin privilege required)
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      tags:
      - Subject
      summary: Add a new subject
      description: Add a new subject to the database (Admin privileges required)
      operationId: post_subject_resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
        required: true
      responses:
        "200":
          description: Subject updated successfully
          content: {}
        "201":
          description: Subject created successfully
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Unauthorized (Admin privilege required)
          content: {}
        "404":
          description: Subject not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: payload
  /subjects/{subject_id}:
    delete:
      tags:
      - Subject
      summary: Delete a subject
      description: Remove a subject from the database (Admin privileges required)
      operationId: delete_specific_subject_resource
      parameters:
      - name: subject_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Subject deleted successfully
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Unauthorized (Admin privilege required)
          content: {}
        "404":
          description: Subject not found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
components:
  schemas:
    Signup:
      allOf:
      - $ref: '#/components/schemas/BaseAuth'
      - required:
        - name
        type: object
        properties:
          name:
            type: string
            description: Full name
          phone:
            type: string
            description: Phone number
          dob:
            type: string
            description: Date of birth
          utype:
            type: string
            description: "User type (Default: tpstudent)"
            default: tpstudent
    BaseAuth:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: User email (must be unique)
        password:
          type: string
          description: User password
    Subject:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Subject Name
    Chat:
      required:
      - subject_id
      type: object
      properties:
        subject_id:
          type: integer
          description: Subject ID
        title:
          type: string
          description: Chat Name
    Message:
      required:
      - chat_id
      - content
      type: object
      properties:
        chat_id:
          type: integer
          description: Subject ID
        content:
          type: string
          description: Message Content
  responses:
    ParseError:
      description: When a mask can't be parsed
      content: {}
    MaskError:
      description: When any error occurs on mask
      content: {}
x-original-swagger-version: "2.0"
